name: Build & Release

on:
  push:
    branches: [ master ]

permissions:
  contents: write      # to create the GitHub Release
  packages: read

jobs:
  release:
    runs-on: windows-latest
    env:
      APP_NAME: CPWizard
      ARTIFACT_ROOT: publish

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.x'

      - name: Get project version
        id: get-version
        uses: kzrnm/get-net-sdk-project-versions-action@v2
        with:
          proj-path: '${{ env.APP_NAME }}/${{ env.APP_NAME }}.csproj'

      - name: Publish EXE + only your DLLs
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force -Path "$env:ARTIFACT_ROOT\$env:APP_NAME" | Out-Null

          dotnet publish "$env:APP_NAME\$env:APP_NAME.csproj" `
            --configuration Release `
            --output "$env:ARTIFACT_ROOT\$env:APP_NAME" `
            /p:EnableWindowsTargeting=true `
            /p:SelfContained=false

      - name: Copy data files and docs
        shell: pwsh
        run: |
          Copy-Item -Path Data\* -Destination "$env:ARTIFACT_ROOT\$env:APP_NAME" -Recurse -Force
          Copy-Item -Path README.md, LICENSE -Destination "$env:ARTIFACT_ROOT\$env:APP_NAME" -Force

      - name: Build Inno Setup installer
        uses: Minionguyjpro/Inno-Setup-Action@v1.2.2
        with:
           path: "${{ env.ARTIFACT_ROOT }}/Setup/${{ env.APP_NAME }}.iss"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.get-version.outputs.version }}
          name: Release ${{ steps.get-version.outputs.version }}
          files: ${{ env.ARTIFACT_ROOT }}/Setup/${{ env.APP_NAME }}Setup.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
